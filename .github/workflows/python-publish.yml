name: Update Problems # GitHub Actions 탭에서 확인할 수 있는 액션 이름

on: # jobs가 실행되어야 하는 상황 정의
  push:
    branches: [ "main" ] # main 브랜치에 push가 발생했을 때
  pull_request:

jobs: # 실제 실행될 내용
  build:
    runs-on: ubuntu-latest # 빌드 환경
    steps:
    - uses: actions/checkout@v3 # checkout
    - name: Set up Python 3.10 
      uses: actions/setup-python@v3 # setup-python
      with:
        python-version: "3.10" # 3.10버전 파이썬 사용
    - name: Install dependencies # 1) 스크립트에 필요한 dependency 설치
      run: |
        python -m pip install --upgrade pip
        pip install python-leetcode 
        pip install -r ./notion/requirements.txt
    # - name: Run script
    #   run: python ./notion/to_notion.py
    #   env:
      
    #     NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
    #     NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
    - name: Extract BaekjoonHub Title from Commit Message
      id: extract-title
      run: |
        COMMIT_MSG=$(git log -1 --pretty=%B)
        echo "Last commit message: $COMMIT_MSG"

        if echo "$COMMIT_MSG" | grep -q "\-BaekjoonHub"; then
          TITLE=$(echo "$COMMIT_MSG" | sed -nE 's/.*Title:\s*(.+?),\s*Time:.*/\1/p')
          echo "PROBLEM_TITLE=$TITLE" >> $GITHUB_ENV
          echo "Detected BaekjoonHub Title: $TITLE"
        else
          echo "No BaekjoonHub title found."
        fi
    - name: Run update.py # 2) update.py 실행
      run: |
        python update.py
      env:
        DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        PROBLEM_TITLE: ${{ env.PROBLEM_TITLE }}  # only set if commit matches BaekjoonHub
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_REF_NAME: ${{ github.ref_name }}
    - name: Commit changes # 3) 추가된 파일 commit
      run: |
        git config --global user.name 'HidenLee' # 유저명
        git config --global user.email 'hyundo1995@gmail.com' # 유저 이메일
        git add -A
        git commit -am "auto update README.md & Notion Database" # 커밋 메시지
    - name: Push changes # 4) 메인에 푸시
      run: |
        git push